
Because php classes can inherit from only one parent, a dual structure exists:

   ldapAuthorizationMappingConf extends ldapAuthorizationMapping
   ldapAuthorizationConsumerDrupalRole extends ldapAuthorizationConsumerAbstract

with a one to one relationship between: ldapAuthorizationMapping and ldapAuthorizationConsumerDrupalRole
and a one to one relationship between: ldapAuthorizationMappingConf and ldapAuthorizationConsumerDrupalRole


-----------------------------------------
LdapAuthorizationMappingAbstract

Abstract class to be extended by LdapAuthorizationMapping<consumer type> such as LdapAuthorizationConsumerDrupalRole
-----------------------------------------


-----------------------------------------
LdapAuthorizationMapping
-----------------------------------------

- consumerType
- consumer - reference to consumer object
- sid (one to one relationship to server).  Will likely be one to many eventually.

- inDatabase
- description
- status

- deriveFromDn
- deriveFromDnAttr
- deriveFromAttr
- deriveFromAttrAttr
- deriveFromEntry
- deriveFromEntryEntries
- deriveFromEntryAttr
- mappings
- synchToLdap

- useMappingsAsFilter
- onlyApplyToLdapAuthenticated
- synchOnLogon
- synchManually
- revokeLdapProvisioned
- revokeNonLdapProvisioned
- regrantLdapProvisioned
- createTargets

depracated:  mappingID, consumer, consumermodule

-----------------------------------------
LdapAuthorizationConsumer<consumer_type>
-----------------------------------------
consumerType

name
consumerModule
namePlural
shortName
shortNamePlural
description
mapping // references to mapping object.
allowSynchBothDirections
allowConsumerObjectCreation

useMappingsAsFilterDefault
onlyApplyToLdapAuthenticatedDefault
synchOnLogonDefault
synchManuallyDefault
revokeLdapProvisionedDefault
revokeNonLdapProvisionedDefault
regrantLdapProvisionedDefault
createTargetsDefault
